name: Deploy WebAssembly Tool to GitHub Pages
# this_file: .github/workflows/deploy.yml

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  release:
    types: [published]

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: 'pages'
  cancel-in-progress: false

jobs:
  # Build the WebAssembly module and web tool
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Rust toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: wasm32-unknown-unknown

      - name: Install wasm-pack
        run: |
          curl https://rustwasm.github.io/wasm-pack/installer/init.sh -sSf | sh
          echo "$HOME/.cargo/bin" >> $GITHUB_PATH

      - name: Cache Rust dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-

      - name: Build WebAssembly module
        run: |
          chmod +x ./build-wasm.sh
          ./build-wasm.sh

      - name: Verify WASM build output
        run: |
          echo "=== WASM Build Verification ==="
          ls -la docs/pkg/
          echo "=== Package.json content ==="
          cat docs/pkg/package.json
          echo "=== WASM file size ==="
          du -h docs/pkg/*.wasm

      - name: Setup Node.js for Jekyll
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Setup Ruby for Jekyll
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.1'
          bundler-cache: true
          working-directory: docs

      - name: Setup Pages
        uses: actions/configure-pages@v5
        with:
          static_site_generator: jekyll

      - name: Install Jekyll dependencies
        run: |
          cd docs
          bundle install

      - name: Configure Jekyll for WASM
        run: |
          cd docs
          # Add WASM MIME type configuration to _config.yml if not present
          if ! grep -q "plugins:" _config.yml; then
            echo -e "\n# WASM Configuration\nplugins:\n  - jekyll-optional-front-matter" >> _config.yml
          fi
          if ! grep -q "include:" _config.yml; then
            echo -e "\n# Include WASM files\ninclude:\n  - pkg" >> _config.yml
          fi

      - name: Build Jekyll site with WASM
        run: |
          cd docs
          bundle exec jekyll build --verbose
          echo "=== Build output verification ==="
          ls -la _site/
          ls -la _site/pkg/ || echo "No pkg directory in _site"

      - name: Copy WASM files to Jekyll output
        run: |
          # Ensure WASM files are copied to Jekyll output
          mkdir -p docs/_site/pkg
          cp -v docs/pkg/* docs/_site/pkg/
          echo "=== Final WASM files in site ==="
          ls -la docs/_site/pkg/

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: docs/_site

  # Deploy to GitHub Pages
  deploy:
    if: github.ref == 'refs/heads/main'
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

  # Test deployment (runs on PRs and after deployment)
  test:
    if: always()
    needs: [build]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Download build artifact
        if: github.ref == 'refs/heads/main'
        uses: actions/download-artifact@v5
        with:
          name: github-pages
          path: ./site-test

      - name: Test WASM integration
        run: |
          echo "=== Testing WASM files ==="
          if [ -d "./site-test" ]; then
            cd site-test
            find . -name "*.wasm" -exec echo "Found WASM file: {}" \;
            find . -name "*.js" -path "*/pkg/*" -exec echo "Found JS file: {}" \;
          else
            echo "No site artifact to test (likely a PR build)"
          fi

      - name: Verify deployment configuration
        run: |
          echo "=== Deployment Configuration Check ==="
          echo "GitHub Pages URL will be: https://${{ github.repository_owner }}.github.io/${{ github.event.repository.name }}"
          echo "Tool URL will be: https://${{ github.repository_owner }}.github.io/${{ github.event.repository.name }}/tool.html"
