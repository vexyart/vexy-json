warning: unnecessary qualification
   --> crates/core/src/optimization/memory_pool.rs:157:34
    |
157 |             return Some(unsafe { std::slice::from_raw_parts(slice.as_ptr(), 0) });
    |                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
note: the lint level is defined here
   --> crates/core/src/lib.rs:6:5
    |
6   |     unused_qualifications
    |     ^^^^^^^^^^^^^^^^^^^^^
help: remove the unnecessary path segments
    |
157 -             return Some(unsafe { std::slice::from_raw_parts(slice.as_ptr(), 0) });
157 +             return Some(unsafe { slice::from_raw_parts(slice.as_ptr(), 0) });
    |

warning: unreachable pattern
   --> crates/core/src/streaming/mod.rs:152:17
    |
152 |                 _ => false,
    |                 ^ no value can reach this
    |
note: multiple earlier patterns match some of the same values
   --> crates/core/src/streaming/mod.rs:152:17
    |
142 |                 ParserState::ExpectingValue => self.process_value(token)?,
    |                 --------------------------- matches some of the same values
143 |                 ParserState::InObject { expecting_key } => {
    |                 --------------------------------------- matches some of the same values
...
150 |                 ParserState::InArray { .. } => self.process_value(token)?,
    |                 --------------------------- matches some of the same values
151 |                 ParserState::BetweenValues => self.process_between_values(token)?,
    |                 -------------------------- matches some of the same values
152 |                 _ => false,
    |                 ^ collectively making this unreachable
    = note: `#[warn(unreachable_patterns)]` on by default

warning: fields `pattern`, `strategy`, and `confidence` are never read
  --> crates/core/src/error/recovery.rs:51:5
   |
49 | struct ContextRule {
   |        ----------- fields in this struct
50 |     /// Pattern to match in the error context
51 |     pattern: String,
   |     ^^^^^^^
52 |     /// Recovery strategy to apply
53 |     strategy: RecoveryStrategy,
   |     ^^^^^^^^
54 |     /// Confidence level (0.0 to 1.0)
55 |     confidence: f32,
   |     ^^^^^^^^^^
   |
   = note: `ContextRule` has derived impls for the traits `Clone` and `Debug`, but these are intentionally ignored during dead code analysis
   = note: `#[warn(dead_code)]` on by default

warning: methods `analyze_missing_comma`, `analyze_unquoted_key`, `analyze_invalid_comment`, `analyze_duplicate_key`, `analyze_parsing_failed`, and `analyze_invalid_utf8` are never used
   --> crates/core/src/error/recovery.rs:340:8
    |
58  | impl ErrorRecoveryAnalyzer {
    | -------------------------- methods in this implementation
...
340 |     fn analyze_missing_comma(&self, error: &Error, _input: &str) -> Vec<RecoveryStrategy> {
    |        ^^^^^^^^^^^^^^^^^^^^^
...
353 |     fn analyze_unquoted_key(&self, error: &Error, _input: &str) -> Vec<RecoveryStrategy> {
    |        ^^^^^^^^^^^^^^^^^^^^
...
364 |     fn analyze_invalid_comment(&self, error: &Error, _input: &str) -> Vec<RecoveryStrategy> {
    |        ^^^^^^^^^^^^^^^^^^^^^^^
...
386 |     fn analyze_duplicate_key(&self, _error: &Error, _input: &str) -> Vec<RecoveryStrategy> {
    |        ^^^^^^^^^^^^^^^^^^^^^
...
442 |     fn analyze_parsing_failed(&self, _error: &Error, _input: &str) -> Vec<RecoveryStrategy> {
    |        ^^^^^^^^^^^^^^^^^^^^^^
...
453 |     fn analyze_invalid_utf8(&self, _error: &Error, _input: &str) -> Vec<RecoveryStrategy> {
    |        ^^^^^^^^^^^^^^^^^^^^

warning: field `value_builder` is never read
   --> crates/core/src/parser.rs:129:5
    |
119 | pub struct Parser<'a> {
    |            ------ field in this struct
...
129 |     value_builder: ValueBuilder,
    |     ^^^^^^^^^^^^^

warning: field `first_element` is never read
  --> crates/core/src/streaming/mod.rs:73:15
   |
73 |     InArray { first_element: bool },
   |     -------   ^^^^^^^^^^^^^
   |     |
   |     field in this variant
   |
   = note: `ParserState` has derived impls for the traits `Clone` and `Debug`, but these are intentionally ignored during dead code analysis

warning: field `temp_state` is never read
  --> crates/core/src/streaming/buffered.rs:59:5
   |
41 | pub struct BufferedStreamingParser<R: Read> {
   |            ----------------------- field in this struct
...
59 |     temp_state: TempParsingState,
   |     ^^^^^^^^^^

warning: multiple fields are never read
  --> crates/core/src/streaming/buffered.rs:66:5
   |
64 | struct TempParsingState {
   |        ---------------- fields in this struct
65 |     /// Buffer for accumulating string content
66 |     string_buffer: String,
   |     ^^^^^^^^^^^^^
67 |     /// Whether we're inside a string literal
68 |     in_string: bool,
   |     ^^^^^^^^^
69 |     /// Whether we're inside a comment
70 |     in_comment: bool,
   |     ^^^^^^^^^^
71 |     /// Comment type (single or multi-line)
72 |     comment_type: CommentType,
   |     ^^^^^^^^^^^^
73 |     /// Escape sequence state
74 |     escape_next: bool,
   |     ^^^^^^^^^^^
75 |     /// Unicode escape accumulator
76 |     unicode_buffer: String,
   |     ^^^^^^^^^^^^^^
77 |     /// Bracket depth for object/array nesting
78 |     bracket_depth: i32,
   |     ^^^^^^^^^^^^^
   |
   = note: `TempParsingState` has derived impls for the traits `Default` and `Debug`, but these are intentionally ignored during dead code analysis

warning: variants `SingleLine` and `MultiLine` are never constructed
  --> crates/core/src/streaming/buffered.rs:85:5
   |
83 | enum CommentType {
   |      ----------- variants in this enum
84 |     None,
85 |     SingleLine,
   |     ^^^^^^^^^^
86 |     MultiLine,
   |     ^^^^^^^^^
   |
   = note: `CommentType` has derived impls for the traits `Clone` and `Debug`, but these are intentionally ignored during dead code analysis

warning: method `char_to_token` is never used
   --> crates/core/src/streaming/buffered.rs:267:8
    |
95  | impl<R: Read> BufferedStreamingParser<R> {
    | ---------------------------------------- method in this implementation
...
267 |     fn char_to_token(&self, ch: char) -> Result<Token> {
    |        ^^^^^^^^^^^^^

warning: enum `TokenizeResult` is never used
   --> crates/core/src/streaming/buffered.rs:543:6
    |
543 | enum TokenizeResult {
    |      ^^^^^^^^^^^^^^

warning: method `available` is never used
  --> crates/core/src/optimization/memory_pool.rs:54:8
   |
44 | impl Block {
   | ---------- method in this implementation
...
54 |     fn available(&self) -> usize {
   |        ^^^^^^^^^

warning: fields `input` and `options` are never read
  --> crates/core/src/lazy/mod.rs:40:5
   |
36 | pub struct LazyObject {
   |            ---------- fields in this struct
...
40 |     input: Arc<str>,
   |     ^^^^^
41 |     /// Parser options
42 |     options: ParserOptions,
   |     ^^^^^^^
   |
   = note: `LazyObject` has derived impls for the traits `Clone` and `Debug`, but these are intentionally ignored during dead code analysis

warning: fields `input` and `options` are never read
  --> crates/core/src/lazy/mod.rs:51:5
   |
47 | pub struct LazyArray {
   |            --------- fields in this struct
...
51 |     input: Arc<str>,
   |     ^^^^^
52 |     /// Parser options
53 |     options: ParserOptions,
   |     ^^^^^^^
   |
   = note: `LazyArray` has derived impls for the traits `Clone` and `Debug`, but these are intentionally ignored during dead code analysis

warning: field `max_repairs` is never read
  --> crates/core/src/repair/advanced.rs:94:5
   |
92 | pub struct AdvancedJsonRepairer {
   |            -------------------- field in this struct
93 |     /// Maximum number of repairs to attempt
94 |     max_repairs: usize,
   |     ^^^^^^^^^^^

warning: missing documentation for a struct field
  --> crates/core/src/error/recovery.rs:15:18
   |
15 |     InsertText { position: usize, text: String },
   |                  ^^^^^^^^^^^^^^^
   |
note: the lint level is defined here
  --> crates/core/src/lib.rs:3:5
   |
3  |     missing_docs,
   |     ^^^^^^^^^^^^

warning: missing documentation for a struct field
  --> crates/core/src/error/recovery.rs:15:35
   |
15 |     InsertText { position: usize, text: String },
   |                                   ^^^^^^^^^^^^

warning: missing documentation for a struct field
  --> crates/core/src/error/recovery.rs:17:18
   |
17 |     RemoveText { span: Span },
   |                  ^^^^^^^^^^

warning: missing documentation for a struct field
  --> crates/core/src/error/recovery.rs:19:19
   |
19 |     ReplaceText { span: Span, replacement: String },
   |                   ^^^^^^^^^^

warning: missing documentation for a struct field
  --> crates/core/src/error/recovery.rs:19:31
   |
19 |     ReplaceText { span: Span, replacement: String },
   |                               ^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
  --> crates/core/src/error/recovery.rs:21:18
   |
21 |     AddClosing { position: usize, delimiter: char },
   |                  ^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
  --> crates/core/src/error/recovery.rs:21:35
   |
21 |     AddClosing { position: usize, delimiter: char },
   |                                   ^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
  --> crates/core/src/error/recovery.rs:23:18
   |
23 |     FixQuoting { span: Span, quote_char: char },
   |                  ^^^^^^^^^^

warning: missing documentation for a struct field
  --> crates/core/src/error/recovery.rs:23:30
   |
23 |     FixQuoting { span: Span, quote_char: char },
   |                              ^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
  --> crates/core/src/error/recovery.rs:25:20
   |
25 |     RepairNumber { span: Span, corrected_value: String },
   |                    ^^^^^^^^^^

warning: missing documentation for a struct field
  --> crates/core/src/error/recovery.rs:25:32
   |
25 |     RepairNumber { span: Span, corrected_value: String },
   |                                ^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
  --> crates/core/src/error/recovery.rs:27:16
   |
27 |     AddComma { position: usize },
   |                ^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
  --> crates/core/src/error/recovery.rs:29:27
   |
29 |     RemoveTrailingComma { position: usize },
   |                           ^^^^^^^^^^^^^^^

warning: missing documentation for a struct field
  --> crates/core/src/error/recovery.rs:31:16
   |
31 |     QuoteKey { span: Span },
   |                ^^^^^^^^^^

warning: missing documentation for a struct field
  --> crates/core/src/error/recovery.rs:33:18
   |
33 |     FixComment { span: Span },
   |                  ^^^^^^^^^^

warning: missing documentation for a struct field
  --> crates/core/src/error/recovery.rs:35:26
   |
35 |     ManualIntervention { suggestions: Vec<String> },
   |                          ^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for an associated constant
  --> crates/core/src/error/terminal.rs:18:5
   |
18 |     pub const RESET: &'static str = "\x1b[0m";
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for an associated constant
  --> crates/core/src/error/terminal.rs:19:5
   |
19 |     pub const BOLD: &'static str = "\x1b[1m";
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for an associated constant
  --> crates/core/src/error/terminal.rs:20:5
   |
20 |     pub const DIM: &'static str = "\x1b[2m";
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for an associated constant
  --> crates/core/src/error/terminal.rs:21:5
   |
21 |     pub const ITALIC: &'static str = "\x1b[3m";
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for an associated constant
  --> crates/core/src/error/terminal.rs:22:5
   |
22 |     pub const UNDERLINE: &'static str = "\x1b[4m";
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for an associated constant
  --> crates/core/src/error/terminal.rs:25:5
   |
25 |     pub const RED: &'static str = "\x1b[31m";
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for an associated constant
  --> crates/core/src/error/terminal.rs:26:5
   |
26 |     pub const GREEN: &'static str = "\x1b[32m";
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for an associated constant
  --> crates/core/src/error/terminal.rs:27:5
   |
27 |     pub const YELLOW: &'static str = "\x1b[33m";
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for an associated constant
  --> crates/core/src/error/terminal.rs:28:5
   |
28 |     pub const BLUE: &'static str = "\x1b[34m";
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for an associated constant
  --> crates/core/src/error/terminal.rs:29:5
   |
29 |     pub const MAGENTA: &'static str = "\x1b[35m";
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for an associated constant
  --> crates/core/src/error/terminal.rs:30:5
   |
30 |     pub const CYAN: &'static str = "\x1b[36m";
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for an associated constant
  --> crates/core/src/error/terminal.rs:31:5
   |
31 |     pub const WHITE: &'static str = "\x1b[37m";
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for an associated constant
  --> crates/core/src/error/terminal.rs:32:5
   |
32 |     pub const GRAY: &'static str = "\x1b[90m";
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for an associated constant
  --> crates/core/src/error/terminal.rs:35:5
   |
35 |     pub const BRIGHT_RED: &'static str = "\x1b[91m";
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for an associated constant
  --> crates/core/src/error/terminal.rs:36:5
   |
36 |     pub const BRIGHT_GREEN: &'static str = "\x1b[92m";
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for an associated constant
  --> crates/core/src/error/terminal.rs:37:5
   |
37 |     pub const BRIGHT_YELLOW: &'static str = "\x1b[93m";
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for an associated constant
  --> crates/core/src/error/terminal.rs:38:5
   |
38 |     pub const BRIGHT_BLUE: &'static str = "\x1b[94m";
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for an associated constant
  --> crates/core/src/error/terminal.rs:39:5
   |
39 |     pub const BRIGHT_MAGENTA: &'static str = "\x1b[95m";
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for an associated constant
  --> crates/core/src/error/terminal.rs:40:5
   |
40 |     pub const BRIGHT_CYAN: &'static str = "\x1b[96m";
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for an associated constant
  --> crates/core/src/error/terminal.rs:41:5
   |
41 |     pub const BRIGHT_WHITE: &'static str = "\x1b[97m";
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for an associated constant
  --> crates/core/src/error/terminal.rs:44:5
   |
44 |     pub const BG_RED: &'static str = "\x1b[41m";
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for an associated constant
  --> crates/core/src/error/terminal.rs:45:5
   |
45 |     pub const BG_GREEN: &'static str = "\x1b[42m";
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for an associated constant
  --> crates/core/src/error/terminal.rs:46:5
   |
46 |     pub const BG_YELLOW: &'static str = "\x1b[43m";
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for an associated constant
  --> crates/core/src/error/terminal.rs:47:5
   |
47 |     pub const BG_BLUE: &'static str = "\x1b[44m";
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for an associated constant
  --> crates/core/src/error/terminal.rs:48:5
   |
48 |     pub const BG_MAGENTA: &'static str = "\x1b[45m";
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for an associated constant
  --> crates/core/src/error/terminal.rs:49:5
   |
49 |     pub const BG_CYAN: &'static str = "\x1b[46m";
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for an associated constant
  --> crates/core/src/error/terminal.rs:50:5
   |
50 |     pub const BG_WHITE: &'static str = "\x1b[47m";
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: `vexy_json-core` (lib) generated 58 warnings (run `cargo fix --lib -p vexy_json-core` to apply 1 suggestion)
warning: returned pointer of `as_ptr` call is never null, so checking it for null will always return false
   --> crates/core/src/optimization/memory_pool.rs:380:18
    |
380 |         assert!(!ptr.as_ptr().is_null());
    |                  ^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: `#[warn(useless_ptr_null_checks)]` on by default

   Compiling vexy_json-core v0.2.0 (/Users/adam/Developer/vcs/github.twardoch/pub/vexy_json/crates/core)
warning: `vexy_json-core` (lib test) generated 59 warnings (58 duplicates)
error[E0432]: unresolved imports `vexy_json_core::parse_optimized_v2`, `vexy_json_core::parse_optimized_v2_with_options`, `vexy_json_core::parse_v2_with_stats`
  --> crates/core/benches/parser_benchmarks.rs:12:18
   |
12 |                  parse_optimized_v2, parse_optimized_v2_with_options, parse_v2_with_stats, ParserOptions};
   |                  ^^^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^ no `parse_v2_with_stats` in the root
   |                  |                   |
   |                  |                   no `parse_optimized_v2_with_options` in the root
   |                  no `parse_optimized_v2` in the root
   |
help: a similar name exists in the module
   |
12 -                  parse_optimized_v2, parse_optimized_v2_with_options, parse_v2_with_stats, ParserOptions};
12 +                  parse_optimized, parse_optimized_v2_with_options, parse_v2_with_stats, ParserOptions};
   |
help: a similar name exists in the module
   |
12 -                  parse_optimized_v2, parse_optimized_v2_with_options, parse_v2_with_stats, ParserOptions};
12 +                  parse_optimized_v2, parse_optimized_with_options, parse_v2_with_stats, ParserOptions};
   |
help: a similar name exists in the module
   |
12 -                  parse_optimized_v2, parse_optimized_v2_with_options, parse_v2_with_stats, ParserOptions};
12 +                  parse_optimized_v2, parse_optimized_v2_with_options, parse_with_stats, ParserOptions};
   |

For more information about this error, try `rustc --explain E0432`.
error: could not compile `vexy_json-core` (bench "parser_benchmarks") due to 1 previous error
